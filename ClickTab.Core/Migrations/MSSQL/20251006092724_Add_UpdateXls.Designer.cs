// <auto-generated />
using System;
using ClickTab.Core.DAL.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ClickTab.Core.Migrations.MSSQL
{
    [DbContext(typeof(MSSQL_DbContext))]
    [Migration("20251006092724_Add_UpdateXls")]
    partial class Add_UpdateXls
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ClickTab.Core.DAL.Models.Generics.Menu", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("ClientCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("FK_DeletedUser")
                        .HasColumnType("int");

                    b.Property<int>("FK_InsertUser")
                        .HasColumnType("int");

                    b.Property<int?>("FK_Parent")
                        .HasColumnType("int");

                    b.Property<int>("FK_UpdateUser")
                        .HasColumnType("int");

                    b.Property<string>("Icon")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("InsertDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Label")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<int?>("SystemRole")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("isExternalPage")
                        .HasColumnType("int");

                    b.Property<bool>("normallyHaveChildren")
                        .HasColumnType("bit");

                    b.HasKey("ID");

                    b.HasIndex("FK_Parent");

                    b.ToTable("Menu");
                });

            modelBuilder.Entity("ClickTab.Core.DAL.Models.Generics.UpdateXls", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("FK_InsertUser")
                        .HasColumnType("int");

                    b.Property<int>("FK_UpdateUser")
                        .HasColumnType("int");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Hash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("InsertDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LastUpdate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.HasIndex("FileName")
                        .IsUnique();

                    b.ToTable("UpdateXls");
                });

            modelBuilder.Entity("ClickTab.Core.DAL.Models.Generics.UrlToken", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<DateTime>("DtmExpiration")
                        .HasColumnType("datetime2");

                    b.Property<int>("FK_InsertUser")
                        .HasColumnType("int");

                    b.Property<int>("FK_UpdateUser")
                        .HasColumnType("int");

                    b.Property<int>("FK_User")
                        .HasColumnType("int");

                    b.Property<DateTime>("InsertDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Token")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.HasIndex("FK_User");

                    b.ToTable("UrlTokens");
                });

            modelBuilder.Entity("ClickTab.Core.DAL.Models.Generics.User", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<bool>("ChangedPassword")
                        .HasColumnType("bit");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<DateTime>("SubscriptionDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.HasKey("ID");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("ClickTab.Core.DAL.Models.NotificationCenter.Notification", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("AdditionalParams")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Notifications");
                });

            modelBuilder.Entity("ClickTab.Core.DAL.Models.NotificationCenter.NotificationDetail", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("FK_Notification")
                        .HasColumnType("int");

                    b.Property<int?>("FK_Receiver")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ReadDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ReceiverEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("SendDate")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.HasIndex("FK_Notification");

                    b.HasIndex("FK_Receiver");

                    b.ToTable("NotificationDetails", t =>
                        {
                            t.HasCheckConstraint("CK_RECEIVER", "(FK_Receiver IS NOT NULL) OR (FK_Receiver IS NULL AND ReceiverEmail IS NOT NULL)");
                        });
                });

            modelBuilder.Entity("ClickTab.Core.DAL.Models.Generics.Menu", b =>
                {
                    b.HasOne("ClickTab.Core.DAL.Models.Generics.Menu", "Parent")
                        .WithMany("Children")
                        .HasForeignKey("FK_Parent")
                        .OnDelete(DeleteBehavior.ClientCascade);

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("ClickTab.Core.DAL.Models.Generics.UrlToken", b =>
                {
                    b.HasOne("ClickTab.Core.DAL.Models.Generics.User", "User")
                        .WithMany()
                        .HasForeignKey("FK_User")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("ClickTab.Core.DAL.Models.NotificationCenter.NotificationDetail", b =>
                {
                    b.HasOne("ClickTab.Core.DAL.Models.NotificationCenter.Notification", "Notification")
                        .WithMany("NotificationDetails")
                        .HasForeignKey("FK_Notification")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ClickTab.Core.DAL.Models.Generics.User", "Receiver")
                        .WithMany()
                        .HasForeignKey("FK_Receiver")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Notification");

                    b.Navigation("Receiver");
                });

            modelBuilder.Entity("ClickTab.Core.DAL.Models.Generics.Menu", b =>
                {
                    b.Navigation("Children");
                });

            modelBuilder.Entity("ClickTab.Core.DAL.Models.NotificationCenter.Notification", b =>
                {
                    b.Navigation("NotificationDetails");
                });
#pragma warning restore 612, 618
        }
    }
}
